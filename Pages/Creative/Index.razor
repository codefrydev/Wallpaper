@page "/Creative"
@using Models
@inject Data Datas
<PageTitle>Creative Art - Wallpaper Studio</PageTitle>

<!-- Pinterest Style Masonry Grid -->
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="masonry-grid">
            @foreach(var item in Datas.VideosData)
            {
                <div class="masonry-item group cursor-pointer" @onclick="@(()=>OpenDialog(item))" role="button" tabindex="0" @onkeypress="@((e) => { if (e.Key == "Enter") OpenDialog(item); })" aria-label="View @item.Name artwork">
                    <div class="relative overflow-hidden bg-white dark:bg-slate-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 group-hover:scale-105">
                        <!-- Pinterest Style Image Container -->
                        <div class="relative">
                            <img 
                                src="@item.ThumbNailUrl" 
                                alt="@item.Description" 
                                class="w-full h-auto object-cover group-hover:scale-105 transition-transform duration-300" 
                                loading="lazy" />
                            
                        </div>
                        
                        <!-- Pinterest Style Content -->
                        <div class="p-4">
                            <h3 class="text-lg font-bold text-slate-800 dark:text-slate-100 mb-1">@item.Name</h3>
                            <p class="text-sm text-slate-600 dark:text-slate-300 mb-3 line-clamp-2">@item.Description</p>
                            <div class="flex items-center justify-between">
                                <span class="text-xs text-slate-500 dark:text-slate-400">View & Download</span>
                                <span class="text-slate-400 text-lg group-hover:translate-x-1 transition-transform duration-300">→</span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Google Photos Style Modal -->
    @if (showModal && selectedImage != null)
    {
        <div class="fixed inset-0 z-50 modal-overlay flex items-center justify-center p-4" @onclick="CloseModal">
            <div class="relative bg-white dark:bg-slate-800 rounded-2xl shadow-2xl modal-content w-full overflow-hidden" @onclick:stopPropagation="true">
                <!-- Modal Header -->
                <div class="flex items-center justify-between p-4 border-b border-slate-200 dark:border-slate-700">
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
                            <span class="text-white text-lg">🖼️</span>
                        </div>
                        <div>
                            <h3 class="text-lg font-bold text-slate-800 dark:text-slate-100">@selectedImage.Name</h3>
                            <p class="text-sm text-slate-500 dark:text-slate-400">Creative Artwork</p>
                        </div>
                    </div>
                    <button @onclick="CloseModal" class="p-2 text-slate-400 dark:text-slate-500 hover:text-slate-600 dark:hover:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-700 rounded-lg transition-colors">
                        <span class="text-lg">✕</span>
                    </button>
                </div>
                
                <!-- Modal Content -->
                <div class="p-6">
                    <div class="flex justify-center mb-6">
                        <img src="@selectedImage.ThumbNailUrl" 
                             alt="@selectedImage.Description" 
                             class="max-w-full max-h-96 object-contain rounded-xl shadow-lg" />
                    </div>
                    
                    @if (!string.IsNullOrEmpty(selectedImage.Description))
                    {
                        <p class="text-slate-600 dark:text-slate-300 text-center mb-6">@selectedImage.Description</p>
                    }
                    
                    <!-- Action Buttons -->
                    <div class="flex gap-4 justify-center">
                        <button @onclick="CloseModal" 
                                class="px-6 py-3 bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-lg font-medium hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors">
                            Cancel
                        </button>
                        <button @onclick="@(() => DownloadImage(selectedImage))" 
                                class="px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg font-medium hover:shadow-lg transition-all duration-300 flex items-center space-x-2">
                            <span class="text-lg">⬇️</span>
                            <span>Download</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

@code {
    [Inject] public IJSRuntime JSRuntime { get; set; } = null!;

    private async Task DownloadImage(Drawing drawing)
    {
        await JSRuntime.InvokeVoidAsync("downloadImageUrl", drawing.ThumbNailUrl, drawing.Name);
        CloseModal();
    }
}